#!/usr/bin/env sh
set -u  # Treat unset variables as an error.
start_time=$(date +%s)

SCRIPT_NAME="$(basename "$0")"
export SCRIPT_NAME

SCRIPT_DIR="$(dirname "$0")"
MODULES_DIR="${SCRIPT_DIR}/sh-modules"
LIB_DIR="${SCRIPT_DIR}/php-dev-helper-lib"
WORK_DIR="${PWD}"
PROJECT_NAME="$(basename "${WORK_DIR}")"

# shellcheck disable=SC1090
. "${MODULES_DIR}/core.sh"
# shellcheck disable=SC1090
. "${MODULES_DIR}/github.sh"
# shellcheck disable=SC1090
. "${MODULES_DIR}/docker.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/version.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/options.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/functions.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/settings.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/commands.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/updater.sh"
# Load PTS_AUX_DEV_MODULE module if present
if [ -e "${LIB_DIR}/${PTS_AUX_DEV_MODULE}" ]; then
    # shellcheck disable=SC1090
    . "${LIB_DIR}/${PTS_AUX_DEV_MODULE}" && console_debug "Module '${PTS_AUX_DEV_MODULE}' processed"
else
    console_debug "Aux dev module '${PTS_AUX_DEV_MODULE}' not found"
fi

_pts_read_options "$@"

### Print header
console_header "PHP Dev Helper Script"
console_comment "Version $(_version)"
console_debug "Version $(_version "${CR_TRUE}")"

### Run checks
console_debug "Working directory: ${WORK_DIR}"

_pts_check_working_env

console_print "$(colored_green "Testing project":) $(colored_cyan "${PROJECT_NAME}")"

_pts_show_options
_pts_check_container


### Start
__TITLE="$(core_get_title_from_file "${WORK_DIR}/TERMINAL_TITLE" "${WORK_DIR}")"
core_set_terminal_title "${__TITLE} - Testing..."

if [ "${PTS_EXECUTE}" -eq "${CR_TRUE}" ]; then
    console_debug "Executing..."
    if [ "${PTS_CONTAINER_STARTED}" -eq "${CR_TRUE}" ]; then
        _phpunit_exec
        _php_metrics_exec
        _multi_tester_exec
        _phpstan_exec
        _psalm_exec
        _php_cs_exec
        _php_cs_bf_exec

        if [ -e "${PTS_TEST_REPORT_INDEX}" ]
        then
            console_info "Report file found: '${PTS_TEST_REPORT_INDEX}'"
        else
            console_comment "Generating report file: '${PTS_TEST_REPORT_INDEX}'"
            _pts_generate_report_file
        fi
    else
        console_error "Container is not started"
    fi
fi

### Finish
if [ "${CR_DEBUG}" -eq 0 ]; then
    console_dark "$(date '+%Y-%m-%d %H:%M:%S')"
fi
console_dark "Executed in $(($(date +%s)-start_time))s"
console_dark "Bye!"

core_set_terminal_title "${__TITLE}"
