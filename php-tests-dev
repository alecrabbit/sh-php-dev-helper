#!/usr/bin/env sh
set -u  # Treat unset variables as an error.
start_time=$(date +%s)

SCRIPT_NAME="$(basename "$0")"
export SCRIPT_NAME

SCRIPT_DIR="$(dirname "$0")"
LIB_DIR="${SCRIPT_DIR}/lib"
WORK_DIR="${PWD}"

# shellcheck disable=SC1090
. "${LIB_DIR}/core.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/logging.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/version.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/options.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/helpers.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/settings.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/commands.sh"

_read_options "$@"

### Print header
_log_header "PHP tests script"
_log_info "Version $(_version)"
_log_debug "Version $(_version "${PTS_TRUE}")"

### Run checks
helper_check_working_env

_show_options
_pts_helper_check_container


### Start
__TITLE="$(_pts_get_title_from_file "${WORK_DIR}/TERMINAL_TITLE" "${WORK_DIR}")"
__title="${__TITLE} - Testing..."
_log_debug "Setting title '${__title}'"
_pts_set_terminal_title "${__title}"

if [ "${PTS_EXECUTE}" -eq "${PTS_TRUE}" ]; then
    _log_debug "Executing..."
    if [ "${PTS_CONTAINER_STARTED}" -eq "${PTS_TRUE}" ]; then
        _phpunit_exec
        _php_metrics_exec
        _multi_tester_exec
        _phpstan_exec
        _php_cs_exec
        _php_cs_bf_exec
    else
        _log_error "Container is not started"
    fi
fi

### Finish
_log_dark "Executed in $(($(date +%s)-start_time))s"
_log_dark "Bye!"

__title="${__TITLE}"
_log_debug "Setting title '${__title}'"
_pts_set_terminal_title "${__title}"

### Debug code 
# _log_debug "Debug messages:"
# _log_debug "SCRIPT_NAME: ${SCRIPT_NAME}"
# _log_debug "SCRIPT_DIR: ${SCRIPT_DIR}"
# _log_debug "WORK_DIR: ${WORK_DIR}"

# _log_dark "dark"
# _log_info "info"
# _log_comment "comment"
# _log_notice "notice"

# _log_warn "Warn message"
# _log_error "Error message"
# _log_fatal "Fatal message"