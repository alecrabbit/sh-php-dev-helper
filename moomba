#!/usr/bin/env sh
set -u  # Treat unset variables as an error.
start_time=$(date +%s)

SCRIPT_NAME="$(basename "$0")"
export SCRIPT_NAME

SCRIPT_DIR="$(dirname "$0")"
MODULES_DIR="${SCRIPT_DIR}/sh-modules"
LIB_DIR="${SCRIPT_DIR}/php-dev-helper-lib"
WORK_DIR="${PWD}"

# shellcheck disable=SC1090
. "${MODULES_DIR}/core.sh"
# shellcheck disable=SC1090
. "${MODULES_DIR}/github.sh"
# shellcheck disable=SC1090
. "${MODULES_DIR}/docker.sh"
# shellcheck disable=SC1090
. "${MODULES_DIR}/git.sh"
# shellcheck disable=SC1090
. "${MODULES_DIR}/version.sh"
# shellcheck disable=SC1090
. "${MODULES_DIR}/updater.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/options.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/functions.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/commands.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/settings.sh"
# Load PTS_AUX_DEV_MODULE module if present
if [ -e "${LIB_DIR}/${PTS_AUX_DEV_MODULE}" ]; then
    # shellcheck disable=SC1090
    . "${LIB_DIR}/${PTS_AUX_DEV_MODULE}" && console_debug "Module '${PTS_AUX_DEV_MODULE}' processed"
else
    console_debug "Aux dev module '${PTS_AUX_DEV_MODULE}' not found"
fi

SCRIPT_VERSION="$(version_load_version "${VERSION_FILE}")"
SCRIPT_BUILD="$(version_load_build "${BUILD_FILE}")"

export SCRIPT_VERSION
export SCRIPT_BUILD

### Print header
console_header "üêá PHP Package creator"
console_debug "Version $(version_string "${CR_TRUE}")"
console_comment "Version $(version_string)"

__TITLE="$(core_get_title_from_file "${WORK_DIR}/TERMINAL_TITLE" "${WORK_DIR}")"

### Creating new package
if [ "${PTS_EXECUTE:-${CR_TRUE}}" -eq "${CR_TRUE}" ]; then
    core_set_terminal_title "${__TITLE} - Creating..."
    console_debug "Executing..."
    console_dark "Creating new package"
fi


### Finish
if [ "${CR_DEBUG}" -eq 0 ]; then
    __time="$(colored_dark "$(date '+%Y-%m-%d %H:%M:%S')")"
else
    __time=""
fi
console_print "üèÅ $(colored_yellow "Done!")\n${__time}"
console_dark "Executed in $(($(date +%s)-start_time))s"
console_dark "Bye!"

core_set_terminal_title "${__TITLE}"
unset __time
