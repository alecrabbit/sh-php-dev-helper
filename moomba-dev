#!/usr/bin/env sh
set -u  # Treat unset variables as an error.
start_time=$(date +%s)

SCRIPT_NAME="$(basename "$0")"
export SCRIPT_NAME

SCRIPT_DIR="$(dirname "$0")"
LIB_DIR="${SCRIPT_DIR}/php-dev-helper-lib"
MODULES_DIR="${LIB_DIR}/sh-modules"
WORK_DIR="${PWD}"
### LOAD MODULES
# shellcheck disable=SC1090
. "${MODULES_DIR}/core.sh"
# shellcheck disable=SC1090
. "${MODULES_DIR}/github.sh"
# shellcheck disable=SC1090
. "${MODULES_DIR}/docker.sh"
# shellcheck disable=SC1090
. "${MODULES_DIR}/git.sh"
# shellcheck disable=SC1090
. "${MODULES_DIR}/version.sh"
# shellcheck disable=SC1090
. "${MODULES_DIR}/updater.sh"
### LOAD COMMON
# shellcheck disable=SC1090
. "${LIB_DIR}/options.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/functions.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/commands.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/settings.sh"
# Load PTS_AUX_DEV_MODULE module if present
if [ -e "${LIB_DIR}/${PTS_AUX_DEV_MODULE}" ]; then
    # shellcheck disable=SC1090
    . "${LIB_DIR}/${PTS_AUX_DEV_MODULE}" && console_debug "Module '${PTS_AUX_DEV_MODULE}' processed"
else
    console_debug "Aux dev module '${PTS_AUX_DEV_MODULE}' not found"
fi
### LOAD MMB SPECIFIC MODULES
# shellcheck disable=SC1090
. "${LIB_DIR}/mmb.sh"
# shellcheck disable=SC1090
. "${LIB_DIR}/tmp.sh"

SCRIPT_VERSION="$(version_load_version "${VERSION_FILE}")"
SCRIPT_BUILD="$(version_load_build "${BUILD_FILE}")"

export SCRIPT_VERSION
export SCRIPT_BUILD

### Read options
mmb_load_settings
mmb_read_options "$@"

__TITLE="$(core_get_title_from_file "${WORK_DIR}/TERMINAL_TITLE" "${WORK_DIR}")"

func_print_header "PHP Package creator"

### Run checks
mmb_show_settings
mmb_check_working_env

### Creating new package
if [ "${COMMON_EXECUTE:-${CR_TRUE}}" -eq "${CR_TRUE}" ]; then
    console_warning "Under development - use with caution!"
    mmb_working_dir
    mmb_check_default_template
    core_set_terminal_title "${__TITLE} - Creating..."
    console_debug "Executing..."
    console_dark "Creating new package"
    mmb_show_package_values
    mmb_check_package_dir "${TMPL_PACKAGE_DIR}"
    mmb_create_package "${TMPL_USE_TEMPLATE_NAME}" "${TMPL_PACKAGE_DIR}"
    mmb_cleanup
else
    console_debug "No execution selected"
fi

func_print_footer "${start_time}"
